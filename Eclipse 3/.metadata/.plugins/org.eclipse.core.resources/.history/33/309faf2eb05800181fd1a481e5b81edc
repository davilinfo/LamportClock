package LamportClock;

import java.io.Console;
import java.io.IOException;
import java.net.Socket;

public class ServerSocket extends java.net.ServerSocket {
	ClientSocket clientSocket;
	static int timeValue;
	static Socket sendSocket;
	
	public ServerSocket(int port) throws IOException {
		super(port);
		
		timeValue = 0;
		clientSocket = new ClientSocket(1);
	}
	
	public String GetLamportValue(Socket socket) throws IOException, InterruptedException{
		
		clientSocket.socket = socket;
		
		clientSocket.socket.getInputStream().wait();
		
		int outerSocketTimeValue = clientSocket.socket.getInputStream().read();
		timeValue = timeValue > outerSocketTimeValue ? timeValue + 1 : outerSocketTimeValue;
		return Integer.toString(timeValue);
	}
	
	public static String SetNewLocalEventValue() throws InterruptedException{
		
		//Realiza alguma atividade e incrementa valor de tempo
		Thread.sleep(1000);
		
		timeValue += timeValue + 1;
		
		return Integer.toString(timeValue);
	}
	
	public static String SetNewEventValue(){
		
		timeValue += timeValue + 1;
		
		return Integer.toString(timeValue);
	}
	
	public static void main(String[] args) throws IOException, InterruptedException {

		ServerSocket serverSocket1 = new ServerSocket(5700);
		
		//evento 1. Local e informa valor de Lamport
		String serverSocket1LamportValue = SetNewLocalEventValue();
		System.out.println(serverSocket1LamportValue);
		
		//evento 2. Recebe msg de outro socket e informa valor de Lamport
		serverSocket1LamportValue = serverSocket1.GetLamportValue(serverSocket1.accept());
		System.out.println(serverSocket1LamportValue);
		
		//evento 3 e envia
		if (serverSocket1.clientSocket.socket.isConnected()){
			//sendSocket = new Socket("localhost", 5800);
			serverSocket1.clientSocket.socket.getOutputStream().write(serverSocket1.timeValue);
		}
		
		
		serverSocket1LamportValue = serverSocket1.GetLamportValue(serverSocket1.accept());
		System.out.println(serverSocket1LamportValue);
		
		serverSocket1LamportValue = serverSocket1.GetLamportValue(serverSocket1.accept());
		System.out.println(serverSocket1LamportValue);
		
		serverSocket1LamportValue = serverSocket1.GetLamportValue(serverSocket1.accept());
		System.out.println(serverSocket1LamportValue);
		
	}

}

